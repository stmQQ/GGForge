"""Initial migration

Revision ID: 2386c369ff7a
Revises: 
Create Date: 2025-04-06 20:39:21.698067

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '2386c369ff7a'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('games',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('title', sa.String(length=64), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('title')
    )
    op.create_table('teams',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('title', sa.String(length=32), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('title')
    )
    op.create_table('users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.Column('email', sa.String(length=256), nullable=False),
    sa.Column('password', sa.String(length=256), nullable=False),
    sa.Column('registration_date', sa.Date(), nullable=False),
    sa.Column('last_online', sa.DateTime(), nullable=False),
    sa.Column('admin_role', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('name')
    )
    op.create_table('achievements',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('title', sa.String(length=64), nullable=False),
    sa.Column('description', sa.String(length=256), nullable=True),
    sa.Column('game_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['game_id'], ['games.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('title')
    )
    op.create_table('connections',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('service_name', sa.String(length=64), nullable=False),
    sa.Column('external_user_url', sa.String(length=256), nullable=True),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('external_user_url')
    )
    op.create_table('friend_requests',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('from_user_id', sa.UUID(), nullable=False),
    sa.Column('to_user_id', sa.UUID(), nullable=False),
    sa.Column('status', sa.String(length=32), nullable=False),
    sa.ForeignKeyConstraint(['from_user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['to_user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('mutual_friend_association',
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('friend_id', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['friend_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], )
    )
    op.create_table('support_tokens',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('theme', sa.String(length=64), nullable=False),
    sa.Column('text', sa.String(length=512), nullable=True),
    sa.Column('status', sa.String(length=32), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('team_members',
    sa.Column('team_id', sa.UUID(), nullable=True),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['team_id'], ['teams.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], )
    )
    op.create_table('tournaments',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('title', sa.String(length=64), nullable=False),
    sa.Column('creator_id', sa.UUID(), nullable=False),
    sa.Column('game_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['creator_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['game_id'], ['games.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('title')
    )
    op.create_table('game_accounts',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('connection_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['connection_id'], ['connections.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('group_stages',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('tournament_id', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['tournament_id'], ['tournaments.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('playoff_stages',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('tournament_id', sa.UUID(), nullable=False),
    sa.Column('structure', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.ForeignKeyConstraint(['tournament_id'], ['tournaments.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tournament_participants',
    sa.Column('tournament_id', sa.UUID(), nullable=True),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['tournament_id'], ['tournaments.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], )
    )
    op.create_table('tournament_teams',
    sa.Column('tournament_id', sa.UUID(), nullable=True),
    sa.Column('team_id', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['team_id'], ['teams.id'], ),
    sa.ForeignKeyConstraint(['tournament_id'], ['tournaments.id'], )
    )
    op.create_table('user_achievements',
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('achievement_id', sa.UUID(), nullable=True),
    sa.Column('unlocked_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['achievement_id'], ['achievements.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], )
    )
    op.create_table('groups',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('letter', sa.String(length=4), nullable=False),
    sa.Column('groupstage_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['groupstage_id'], ['group_stages.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('group_teams',
    sa.Column('group_id', sa.UUID(), nullable=True),
    sa.Column('team_id', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['group_id'], ['groups.id'], ),
    sa.ForeignKeyConstraint(['team_id'], ['teams.id'], )
    )
    op.create_table('matches',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('match_type', sa.String(length=32), nullable=False),
    sa.Column('group_stage_id', sa.UUID(), nullable=True),
    sa.Column('group_id', sa.UUID(), nullable=True),
    sa.Column('playoff_stage_id', sa.UUID(), nullable=True),
    sa.Column('team1_id', sa.UUID(), nullable=True),
    sa.Column('team2_id', sa.UUID(), nullable=True),
    sa.Column('user1_id', sa.UUID(), nullable=True),
    sa.Column('user2_id', sa.UUID(), nullable=True),
    sa.Column('scheduled_time', sa.DateTime(), nullable=True),
    sa.Column('result', sa.String(length=128), nullable=True),
    sa.ForeignKeyConstraint(['group_id'], ['groups.id'], ),
    sa.ForeignKeyConstraint(['group_stage_id'], ['group_stages.id'], ),
    sa.ForeignKeyConstraint(['playoff_stage_id'], ['playoff_stages.id'], ),
    sa.ForeignKeyConstraint(['team1_id'], ['teams.id'], ),
    sa.ForeignKeyConstraint(['team2_id'], ['teams.id'], ),
    sa.ForeignKeyConstraint(['user1_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['user2_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('match_participants',
    sa.Column('match_id', sa.UUID(), nullable=True),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['match_id'], ['matches.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], )
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('match_participants')
    op.drop_table('matches')
    op.drop_table('group_teams')
    op.drop_table('groups')
    op.drop_table('user_achievements')
    op.drop_table('tournament_teams')
    op.drop_table('tournament_participants')
    op.drop_table('playoff_stages')
    op.drop_table('group_stages')
    op.drop_table('game_accounts')
    op.drop_table('tournaments')
    op.drop_table('team_members')
    op.drop_table('support_tokens')
    op.drop_table('mutual_friend_association')
    op.drop_table('friend_requests')
    op.drop_table('connections')
    op.drop_table('achievements')
    op.drop_table('users')
    op.drop_table('teams')
    op.drop_table('games')
    # ### end Alembic commands ###
